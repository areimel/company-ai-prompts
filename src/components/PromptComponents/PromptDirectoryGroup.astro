---
import { getCollection } from "astro:content";
import SearchFilter from "@components/PromptComponents/SearchFilter.astro";
import PromptGrid from "@components/PromptComponents/PromptGrid.astro";

// Filter prompt entries with 'draft: false' & date before current date
const publishedPrompts = await getCollection("prompts", ({ data }) => {
  return !data.draft && data.publishDate < new Date();
});

// Sort content entries by publication date
publishedPrompts.sort(function (a, b) {
  return b.data.publishDate.valueOf() - a.data.publishDate.valueOf();
});

// Get unique categories and count prompts in each
const categories = [...new Set(publishedPrompts.map(prompt => prompt.data.category))];
const categoryCount = categories.reduce((acc, category) => {
  acc[category] = publishedPrompts.filter(prompt => prompt.data.category === category).length;
  return acc;
}, {});

// Get unique sub-categories
const subCategories = [...new Set(publishedPrompts.map(prompt => prompt.data.sub_category))];

// Get all unique tags
const allTags = [...new Set(publishedPrompts.flatMap(prompt => prompt.data.tags))];

// Render all prompt contents
const renderedPrompts = await Promise.all(
  publishedPrompts.map(async (prompt) => {
    const { Content } = await prompt.render();
    return { ...prompt, Content };
  })
);
---

<div class="flex flex-col lg:flex-row gap-8 py-8">
    <!-- Sidebar -->
    <div class="w-full lg:w-64 lg:flex-shrink-0">
        <SearchFilter
        publishedPrompts={publishedPrompts}
        categories={categories}
        categoryCount={categoryCount}
        subCategories={subCategories}
        allTags={allTags}
        />
    </div>

    <!-- Main Content -->
    <div class="flex-1">
        <PromptGrid publishedPrompts={publishedPrompts} />
    </div>
</div>